/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.refugeescode.hackboard.web.api.controller;

import io.refugeescode.hackboard.service.dto.ProjectDto;

import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

@Api(value = "projects", description = "the projects API")
public interface ProjectsApi {

    @ApiOperation(value = "Add a new project", notes = "", response = Boolean.class, tags={ "project", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Boolean.class) })
    
    @RequestMapping(value = "/projects",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    default ResponseEntity<Boolean> addProject(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ProjectDto project) {
        // do some magic!
        return new ResponseEntity<Boolean>(HttpStatus.OK);
    }


    @ApiOperation(value = "Edit project", notes = "", response = Boolean.class, tags={ "project", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Boolean.class) })
    
    @RequestMapping(value = "/projects",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    default ResponseEntity<Boolean> editProject(@ApiParam(value = "" ,required=true )  @Valid @RequestBody ProjectDto project) {
        // do some magic!
        return new ResponseEntity<Boolean>(HttpStatus.OK);
    }


    @ApiOperation(value = "List all projects", notes = "", response = ProjectDto.class, responseContainer = "List", tags={ "project", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = ProjectDto.class, responseContainer = "List") })
    
    @RequestMapping(value = "/projects",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<ProjectDto>> listProjects() {
        // do some magic!
        return new ResponseEntity<List<ProjectDto>>(HttpStatus.OK);
    }

}
